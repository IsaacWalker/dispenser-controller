# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import printer_pb2 as printer__pb2


class PrinterStub(object):
  """Service for interacting with the Dispenser
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.PrintMedication = channel.unary_unary(
        '/Printer/PrintMedication',
        request_serializer=printer__pb2.PrintMedicationRequest.SerializeToString,
        response_deserializer=printer__pb2.PrintMedicationResponse.FromString,
        )
    self.CheckHealth = channel.unary_unary(
        '/Printer/CheckHealth',
        request_serializer=printer__pb2.CheckPrinterHealthRequest.SerializeToString,
        response_deserializer=printer__pb2.CheckPrinterHealthResponse.FromString,
        )


class PrinterServicer(object):
  """Service for interacting with the Dispenser
  """

  def PrintMedication(self, request, context):
    """Prints the medication
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CheckHealth(self, request, context):
    """Checks the printer health
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PrinterServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'PrintMedication': grpc.unary_unary_rpc_method_handler(
          servicer.PrintMedication,
          request_deserializer=printer__pb2.PrintMedicationRequest.FromString,
          response_serializer=printer__pb2.PrintMedicationResponse.SerializeToString,
      ),
      'CheckHealth': grpc.unary_unary_rpc_method_handler(
          servicer.CheckHealth,
          request_deserializer=printer__pb2.CheckPrinterHealthRequest.FromString,
          response_serializer=printer__pb2.CheckPrinterHealthResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Printer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
